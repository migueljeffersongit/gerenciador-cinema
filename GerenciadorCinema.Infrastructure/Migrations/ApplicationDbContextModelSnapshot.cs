// <auto-generated />
using System;
using GerenciadorCinema.Infrastructure.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorCinema.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GerenciadorCinema.Domain.Entities.Filme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Diretor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("SalaId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("SalaId");

                    b.ToTable("Filmes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("23844d9c-0d76-477d-8fe6-dc10781ce0c7"),
                            Diretor = "Francis Ford Coppola",
                            Duracao = new TimeSpan(0, 2, 55, 0, 0),
                            Nome = "O Poderoso Chefão",
                            SalaId = new Guid("99ef33b3-ac0f-4e96-8b61-a1faae89971b")
                        },
                        new
                        {
                            Id = new Guid("d6e38674-8057-48a2-9e73-224e7a0d4d16"),
                            Diretor = "Robert Zemeckis",
                            Duracao = new TimeSpan(0, 2, 22, 0, 0),
                            Nome = "Forrest Gump"
                        },
                        new
                        {
                            Id = new Guid("d9c2a815-3550-4726-bd8e-e2c5d77d8cf9"),
                            Diretor = "Lana e Lilly Wachowski",
                            Duracao = new TimeSpan(0, 2, 16, 0, 0),
                            Nome = "Matrix",
                            SalaId = new Guid("9401bbb8-9499-4a9e-9475-2e61f16cb336")
                        },
                        new
                        {
                            Id = new Guid("67f4cc13-8e14-4c13-8f58-404178b62fb1"),
                            Diretor = "Chris Columbus",
                            Duracao = new TimeSpan(0, 2, 32, 0, 0),
                            Nome = "Harry Potter e a Pedra Filosofal",
                            SalaId = new Guid("48d76a83-1453-4fef-ba32-a56110e12b7e")
                        });
                });

            modelBuilder.Entity("GerenciadorCinema.Domain.Entities.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NumeroSala")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Salas", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("99ef33b3-ac0f-4e96-8b61-a1faae89971b"),
                            Descricao = "Sala principal com capacidade para 150 pessoas",
                            NumeroSala = "Sala 1"
                        },
                        new
                        {
                            Id = new Guid("9401bbb8-9499-4a9e-9475-2e61f16cb336"),
                            Descricao = "Sala VIP com assentos reclináveis e serviço de bar",
                            NumeroSala = "Sala 2"
                        },
                        new
                        {
                            Id = new Guid("48d76a83-1453-4fef-ba32-a56110e12b7e"),
                            Descricao = "Sala com projeção 3D",
                            NumeroSala = "Sala 3"
                        });
                });

            modelBuilder.Entity("GerenciadorCinema.Domain.Entities.Filme", b =>
                {
                    b.HasOne("GerenciadorCinema.Domain.Entities.Sala", "Sala")
                        .WithMany("Filmes")
                        .HasForeignKey("SalaId");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("GerenciadorCinema.Domain.Entities.Sala", b =>
                {
                    b.Navigation("Filmes");
                });
#pragma warning restore 612, 618
        }
    }
}
